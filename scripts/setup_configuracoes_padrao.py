#!/usr/bin/env python3
"""
Script para criar configura√ß√µes padr√£o do sistema
Executa na inicializa√ß√£o ou setup
"""

from app import create_app
from models import db
from models.configuracao_avancada import (
    ConfiguracaoSistema, ConfigScope, ConfigType, ConfigCategory
)

def criar_configuracoes_padrao():
    """Cria todas as configura√ß√µes padr√£o do sistema"""
    
    configuracoes = [
        # SEGURAN√áA
        {
            'chave': 'security.password.min_length',
            'nome_exibicao': 'Tamanho M√≠nimo da Senha',
            'descricao': 'N√∫mero m√≠nimo de caracteres para senhas',
            'categoria': ConfigCategory.SECURITY,
            'tipo': ConfigType.INTEGER,
            'valor': '8',
            'valor_padrao': '8',
            'valor_minimo': 6,
            'valor_maximo': 50,
            'obrigatoria': True
        },
        {
            'chave': 'security.session.timeout_minutes',
            'nome_exibicao': 'Timeout de Sess√£o (minutos)',
            'descricao': 'Tempo limite para sess√µes inativas',
            'categoria': ConfigCategory.SECURITY,
            'tipo': ConfigType.INTEGER,
            'valor': '30',
            'valor_padrao': '30',
            'valor_minimo': 5,
            'valor_maximo': 480
        },
        {
            'chave': 'security.login.max_attempts',
            'nome_exibicao': 'M√°ximo de Tentativas de Login',
            'descricao': 'N√∫mero m√°ximo de tentativas antes do bloqueio',
            'categoria': ConfigCategory.SECURITY,
            'tipo': ConfigType.INTEGER,
            'valor': '5',
            'valor_padrao': '5',
            'valor_minimo': 3,
            'valor_maximo': 10
        },
        {
            'chave': 'security.audit.log_all_actions',
            'nome_exibicao': 'Log de Todas as A√ß√µes',
            'descricao': 'Registrar todas as a√ß√µes dos usu√°rios',
            'categoria': ConfigCategory.SECURITY,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'true',
            'valor_padrao': 'true',
            'obrigatoria': True
        },
        
        # DOSSI√äS
        {
            'chave': 'dossie.files.max_size_mb',
            'nome_exibicao': 'Tamanho M√°ximo de Arquivo (MB)',
            'descricao': 'Tamanho m√°ximo permitido para arquivos anexados',
            'categoria': ConfigCategory.DOSSIE,
            'tipo': ConfigType.INTEGER,
            'valor': '10',
            'valor_padrao': '10',
            'valor_minimo': 1,
            'valor_maximo': 100
        },
        {
            'chave': 'dossie.files.allowed_types',
            'nome_exibicao': 'Tipos de Arquivo Permitidos',
            'descricao': 'Extens√µes de arquivo permitidas (JSON array)',
            'categoria': ConfigCategory.DOSSIE,
            'tipo': ConfigType.JSON,
            'valor': '["pdf", "doc", "docx", "jpg", "png", "jpeg"]',
            'valor_padrao': '["pdf", "doc", "docx", "jpg", "png", "jpeg"]'
        },
        {
            'chave': 'dossie.workflow.require_approval',
            'nome_exibicao': 'Requer Aprova√ß√£o para Altera√ß√µes',
            'descricao': 'Altera√ß√µes em dossi√™s precisam de aprova√ß√£o',
            'categoria': ConfigCategory.DOSSIE,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'true',
            'valor_padrao': 'true'
        },
        {
            'chave': 'dossie.retention.years',
            'nome_exibicao': 'Per√≠odo de Reten√ß√£o (anos)',
            'descricao': 'Tempo de reten√ß√£o obrigat√≥ria dos dossi√™s',
            'categoria': ConfigCategory.DOSSIE,
            'tipo': ConfigType.INTEGER,
            'valor': '7',
            'valor_padrao': '7',
            'valor_minimo': 1,
            'valor_maximo': 50
        },
        
        # ESCOLA
        {
            'chave': 'escola.horario_funcionamento',
            'nome_exibicao': 'Hor√°rio de Funcionamento',
            'descricao': 'Hor√°rio padr√£o de funcionamento da escola',
            'categoria': ConfigCategory.ESCOLA,
            'escopo': ConfigScope.ESCOLA,
            'tipo': ConfigType.STRING,
            'valor': '07:00-17:00',
            'valor_padrao': '07:00-17:00',
            'validacao_regex': r'^\d{2}:\d{2}-\d{2}:\d{2}$'
        },
        {
            'chave': 'escola.permite_emprestimo_externo',
            'nome_exibicao': 'Permite Empr√©stimo Externo',
            'descricao': 'Permite empr√©stimo de dossi√™s para pessoas externas',
            'categoria': ConfigCategory.ESCOLA,
            'escopo': ConfigScope.ESCOLA,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'false',
            'valor_padrao': 'false'
        },
        
        # INTERFACE
        {
            'chave': 'ui.theme',
            'nome_exibicao': 'Tema da Interface',
            'descricao': 'Tema padr√£o da interface do usu√°rio',
            'categoria': ConfigCategory.USER_INTERFACE,
            'escopo': ConfigScope.USUARIO,
            'tipo': ConfigType.STRING,
            'valor': 'light',
            'valor_padrao': 'light',
            'opcoes_validas': '["light", "dark", "auto"]'
        },
        {
            'chave': 'ui.items_per_page',
            'nome_exibicao': 'Itens por P√°gina',
            'descricao': 'N√∫mero padr√£o de itens exibidos por p√°gina',
            'categoria': ConfigCategory.USER_INTERFACE,
            'escopo': ConfigScope.USUARIO,
            'tipo': ConfigType.INTEGER,
            'valor': '25',
            'valor_padrao': '25',
            'opcoes_validas': '["10", "25", "50", "100"]'
        },
        
        # SISTEMA
        {
            'chave': 'system.cache.enabled',
            'nome_exibicao': 'Cache Habilitado',
            'descricao': 'Habilitar sistema de cache para melhor performance',
            'categoria': ConfigCategory.SYSTEM,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'true',
            'valor_padrao': 'true',
            'requer_reinicializacao': True
        },
        {
            'chave': 'system.maintenance.auto_cleanup',
            'nome_exibicao': 'Limpeza Autom√°tica',
            'descricao': 'Executar limpeza autom√°tica de logs e arquivos tempor√°rios',
            'categoria': ConfigCategory.SYSTEM,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'true',
            'valor_padrao': 'true'
        },
        
        # BACKUP
        {
            'chave': 'backup.auto_enabled',
            'nome_exibicao': 'Backup Autom√°tico',
            'descricao': 'Executar backups autom√°ticos do sistema',
            'categoria': ConfigCategory.BACKUP,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'true',
            'valor_padrao': 'true'
        },
        {
            'chave': 'backup.frequency',
            'nome_exibicao': 'Frequ√™ncia do Backup',
            'descricao': 'Frequ√™ncia de execu√ß√£o dos backups autom√°ticos',
            'categoria': ConfigCategory.BACKUP,
            'tipo': ConfigType.STRING,
            'valor': 'daily',
            'valor_padrao': 'daily',
            'opcoes_validas': '["hourly", "daily", "weekly", "monthly"]'
        },
        
        # NOTIFICA√á√ïES
        {
            'chave': 'notification.email.enabled',
            'nome_exibicao': 'Notifica√ß√µes por Email',
            'descricao': 'Habilitar envio de notifica√ß√µes por email',
            'categoria': ConfigCategory.NOTIFICATION,
            'tipo': ConfigType.BOOLEAN,
            'valor': 'true',
            'valor_padrao': 'true'
        },
        {
            'chave': 'notification.email.sender',
            'nome_exibicao': 'Email Remetente',
            'descricao': 'Endere√ßo de email usado como remetente',
            'categoria': ConfigCategory.NOTIFICATION,
            'tipo': ConfigType.EMAIL,
            'valor': 'noreply@escola.edu.br',
            'valor_padrao': 'noreply@escola.edu.br',
            'validacao_regex': r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        }
    ]
    
    print("üîß Criando configura√ß√µes padr√£o do sistema...")
    
    criadas = 0
    atualizadas = 0
    
    for config_data in configuracoes:
        # Verificar se j√° existe
        existing = ConfiguracaoSistema.query.filter_by(
            chave=config_data['chave'],
            escopo=config_data.get('escopo', ConfigScope.GLOBAL)
        ).first()
        
        if existing:
            print(f"   ‚ÑπÔ∏è  {config_data['chave']} j√° existe")
            atualizadas += 1
            continue
        
        # Criar nova configura√ß√£o
        config = ConfiguracaoSistema(
            chave=config_data['chave'],
            nome_exibicao=config_data['nome_exibicao'],
            descricao=config_data['descricao'],
            categoria=config_data['categoria'],
            escopo=config_data.get('escopo', ConfigScope.GLOBAL),
            tipo=config_data['tipo'],
            valor=config_data['valor'],
            valor_padrao=config_data['valor_padrao'],
            validacao_regex=config_data.get('validacao_regex'),
            valor_minimo=config_data.get('valor_minimo'),
            valor_maximo=config_data.get('valor_maximo'),
            opcoes_validas=config_data.get('opcoes_validas'),
            obrigatoria=config_data.get('obrigatoria', False),
            requer_reinicializacao=config_data.get('requer_reinicializacao', False)
        )
        
        db.session.add(config)
        print(f"   ‚úÖ {config_data['chave']}")
        criadas += 1
    
    db.session.commit()
    
    print(f"\nüìä Resultado:")
    print(f"   Configura√ß√µes criadas: {criadas}")
    print(f"   Configura√ß√µes existentes: {atualizadas}")
    print(f"   Total: {criadas + atualizadas}")
    
    return criadas, atualizadas

if __name__ == '__main__':
    app = create_app()
    
    with app.app_context():
        print("üöÄ SETUP DE CONFIGURA√á√ïES PADR√ÉO")
        print("=" * 50)
        
        try:
            # Criar tabelas se n√£o existirem
            db.create_all()
            
            # Criar configura√ß√µes
            criadas, atualizadas = criar_configuracoes_padrao()
            
            print(f"\nüéâ Setup conclu√≠do com sucesso!")
            print(f"‚úÖ {criadas} configura√ß√µes criadas")
            print(f"‚ÑπÔ∏è  {atualizadas} configura√ß√µes j√° existiam")
            
        except Exception as e:
            print(f"‚ùå Erro durante o setup: {e}")
            import traceback
            traceback.print_exc()
